#pwd=項目根目錄
#docker build -t ngaq-server:1.0 -f ./Ngaq.Server/Dockerfile-Aot .
#docker run --rm -p 5000:2341 --name ngaq-server ngaq-server:1.0
#構建上下文在Ngaq/ 洏不在Ngaq/Ngaq.Server
# 构建阶段（使用.NET 9 SDK）
# TODO 拷配置文件
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /app

# 1. 先裝 Native AOT 必備工具鏈
RUN apt-get update && apt-get install -y \
    clang \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/* # 清除apt缓存 使鏡像更小

# 复制解决方案文件（优化层缓存）
#COPY ["Ngaq.sln", "."]
#COPY ["src/*/*.csproj", "src/"]
COPY ["Ngaq.Core/Ngaq.Core.csproj", "Ngaq.Core/Ngaq.Core.csproj"]
COPY ["Ngaq.Local/Ngaq.Local.csproj", "Ngaq.Local/Ngaq.Local.csproj"]
COPY ["Ngaq.Server/proj/Directory.Build.props", "Ngaq.Server/proj/Directory.Build.props"]
COPY ["Ngaq.Server/proj/Directory.Packages.props", "Ngaq.Server/proj/Directory.Packages.props"]
COPY ["Ngaq.Server/proj/Ngaq.Biz/Ngaq.Biz.csproj", "Ngaq.Server/proj/Ngaq.Biz/Ngaq.Biz.csproj"]
COPY ["Ngaq.Server/proj/Ngaq.Web/Ngaq.Web.csproj", "Ngaq.Server/proj/Ngaq.Web/Ngaq.Web.csproj"]


# 还原NuGet包
# 先複製.sln和.csproj文件進行dotnet restore，利用Docker層緩存加速構建 。
# 避免一次性複製所有文件，防止宿主機路徑結構汙染容器。
#RUN dotnet restore "TeQuaero.Backend.sln"
#RUN cd src/TeQuaero.Web/ && dotnet restore TeQuaero.Web.csproj && cd ../..
#RUN cd ./Ngaq.Server/proj/Ngaq.Web/ && dotnet restore
# 复制所有源码
COPY . .


# 发布项目
RUN dotnet publish "Ngaq.Server/proj/Ngaq.Web/Ngaq.Web.csproj" \
-c Release -o /app/publish \
-r linux-x64
#-p:PublishAot=true \ #加此則報錯曰 不支持提前編譯。只在csproj中開aot即可

# RUN dotnet publish "Ngaq.Server/proj/Ngaq.Web/Ngaq.Web.csproj" -c Release -r linux-x64 -o /app/publish




# 运行时阶段（使用 runtime-deps，不含 .NET Runtime）
FROM mcr.microsoft.com/dotnet/runtime-deps:9.0
WORKDIR /app

# 安装 AOT 所需的依赖（如 ICU、libssl 等）
RUN apt-get update && apt-get install -y \
    libicu-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/publish .

EXPOSE 2341
ENTRYPOINT ["./Ngaq.Web"]
