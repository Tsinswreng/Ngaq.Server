// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ngaq.Biz.Db;

#nullable disable

namespace Ngaq.Biz.Migrations
{
    [DbContext(typeof(ServerDbCtx))]
    [Migration("20250710131814_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Ngaq.Core.Model.Po.Role.PoRole", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("CreatedBy")
                        .HasColumnType("BLOB");

                    b.Property<long>("DbCreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DbUpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("LastUpdatedBy")
                        .HasColumnType("BLOB");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("PoRole");
                });

            modelBuilder.Entity("Ngaq.Core.Model.Sys.Po.Password.PoPassword", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<long>("Algo")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("CreatedBy")
                        .HasColumnType("BLOB");

                    b.Property<long>("DbCreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DbUpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("LastUpdatedBy")
                        .HasColumnType("BLOB");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Password");
                });

            modelBuilder.Entity("Ngaq.Core.Model.Sys.Po.User.PoUser", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("CreatedBy")
                        .HasColumnType("BLOB");

                    b.Property<long>("DbCreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DbUpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("LastUpdatedBy")
                        .HasColumnType("BLOB");

                    b.Property<string>("NickName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RoleId")
                        .HasColumnType("BLOB");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniqueName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Ngaq.Core.Model.Sys.Po.Password.PoPassword", b =>
                {
                    b.HasOne("Ngaq.Core.Model.Sys.Po.User.PoUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
